// Generated by IcedCoffeeScript 1.8.0-a
(function() {
  var sessionBridge;

  sessionBridge = require('../utils/sessionBridge');

  module.exports = function(req, res) {
    var config, docpad, session, time;
    docpad = this.docpad;
    config = this.config;
    session = sessionBridge.get(req);
    if (!session.authenticating || (config.auth == null)) {
      res.redirect(req.url);
      return;
    }
    time = new Date().getTime();
    if (session.lastAuthAttempt && session.lastAuthAttempt > time - 1000) {
      session.authenticating = false;
      res.redirect(req.url);
      return;
    }
    session.lastAuthAttempt = time;
    return this.config.auth(req.body.login, req.body.password, function(err, result) {
      if (result) {
        session.authenticated = true;
        if (req.query.url) {
          return res.redirect(req.query.url);
        } else {
          return res.redirect('/' + config.prefix.url);
        }
      } else {
        return res.redirect(req.url);
      }
    });
  };

}).call(this);
