// Generated by IcedCoffeeScript 1.8.0-a
(function() {
  var __slice = [].slice;

  module.exports = function() {
    if (this.shouldLoadScript) {
      coffeescript(function() {
        return window.minicms_component_file = function(prefix, form, field) {
          var fieldEl, load, upload, use, value;
          fieldEl = $('#field-' + form + '-' + field);
          console.log(field + " = " + $('#' + form + '-form').data('fields')[field]);
          fieldEl.data('value', $('#' + form + '-form').data('fields')[field]);
          value = $('#field-' + form + '-' + field + ' #form-input-' + form + '-' + field + '-hidden').val();
          use = $('#field-' + form + '-' + field).data('use');
          if (!value || value === '') {
            value = null;
          }
          load = function() {
            var comps, ext, id, _i, _ref;
            id = 'field-' + form + '-' + field;
            $('#' + id + ' .state').hide();
            if ((value == null) || value <= 0) {
              return $('#' + id + ' .state-input-file').show();
            } else {
              _ref = value.split('.'), comps = 2 <= _ref.length ? __slice.call(_ref, 0, _i = _ref.length - 1) : (_i = 0, []), ext = _ref[_i++];
              if (ext === 'jpg' || ext === 'jpeg' || ext === 'png' || ext === 'gif') {
                $('#' + id + ' .state').hide();
                $('#' + id + ' .state-image').empty();
                $('#' + id + ' .state-image').append($('<img />'));
                $('#' + id + ' .state-image').append($('<a href="#" class="btn btn-mini btn-danger" />'));
                $('#' + id + ' .state-image a').append($('<span class="icon icon-trash icon-white" />'));
                $('#' + id + ' .state-image a').click((function(_this) {
                  return function(e) {
                    e.preventDefault();
                    value = null;
                    $('#' + id + ' .state-image a').remove();
                    return $('#' + id + ' .state-image img').hide('fast', function() {
                      $('#' + id + ' .state-image img').remove();
                      fieldEl.data('value', null);
                      console.log(field + " = null");
                      minicms_form_update(prefix, form);
                      return load();
                    });
                  };
                })(this));
                $('#' + id + ' .state-image img').attr('src', value + '?nocache=' + (new Date().getTime()));
                $('#' + id + ' .state-image img').addClass('img-polaroid');
                return $('#' + id + ' .state-image').show();
              } else {
                $('#' + id + ' .state').hide();
                $('#' + id + ' .state-unknown').show();
                return $('#' + id + ' .state-unknown').text(value);
              }
            }

            /*
            test ->
             * Check if file exists
            #chocolate.Model.findOneBy id: value, 'File', (err, file) => 
             * TODO load data ->
                if err?
                    value = null
                    $('#'+id+' .state').hide()
                    $('#'+id+' .state-input-file').show()
                    return
            
                id = file.get('id')
                tn =
                    path: "/files/#{id}"
                    name: "/#{md5(id+'|'+id)}.tn.jpg"
                
                if file.isImage()
                    $('#'+id+' .state').hide()
                    $('#'+id+' .state-image').empty()
                    $('#'+id+' .state-image').append($('<img />'))
                    $('#'+id+' .state-image').append($('<a href="#" class="btn btn-mini btn-danger" />'))
                    $('#'+id+' .state-image a').append($('<span class="icon icon-trash icon-white" />'))
                    $('#'+id+' .state-image a').click (e) =>
                        e.preventDefault()
                        value = null
                        $('#'+id+' .state-image a').remove()
                        $('#'+id+' .state-image img').hide 'fast', =>
                            $('#'+id+' .state-image img').remove()
                            load()
                        
                    $('#'+id+' .state-image img').attr('src', tn.path+''+tn.name)
                    $('#'+id+' .state-image').show()
                else
                    $('#'+id+' .state').hide()
                    $('#'+id+' .state-unknown').show()
                    $('#'+id+' .state-unknown').text file.get('name')
             */
          };
          upload = function(data) {
            var req;
            $('#field-' + form + '-' + field + ' .state').hide();
            $('#field-' + form + '-' + field + ' .state-uploading').show();
            data.url = '/' + prefix + '/' + $('#' + form + '-form').data('model') + '/' + field + '/upload';
            req = data.submit();
            req.success((function(_this) {
              return function(data) {
                var checkFile, _ref;
                console.log("UPLOAD SUCCESS");
                value = (_ref = data.result[use]) != null ? _ref.url : void 0;
                fieldEl.data('value', data.result);
                console.log(field + " = " + JSON.stringify(data.result));
                minicms_form_update(prefix, form);
                checkFile = function() {
                  var _ref1;
                  return $.ajax({
                    url: (_ref1 = data.result[use]) != null ? _ref1.url : void 0,
                    type: 'HEAD',
                    error: function() {
                      return setTimeout(checkFile, 1000);
                    },
                    success: function() {
                      return load();
                    }
                  });
                };
                return setTimeout(checkFile, 1000);
              };
            })(this));
            return req.error((function(_this) {
              return function(data) {
                var e, json;
                console.log("UPLOAD ERROR");
                try {
                  json = JSON.parse(data.responseText);
                } catch (_error) {
                  e = _error;
                }
                return load();
              };
            })(this));
          };
          $('#field-' + form + '-' + field + ' #form-input-' + form + '-' + field).fileupload({
            type: 'POST',
            dataType: 'json',
            singleFileUploads: true,
            add: (function(_this) {
              return function(e, data) {
                return upload(data);
              };
            })(this)
          });
          $('#field-' + form + '-' + field + ' .controls').css({
            position: 'relative'
          });
          $('#field-' + form + '-' + field + ' #form-input-' + form + '-' + field).css({
            position: 'absolute',
            opacity: 0,
            zIndex: 2,
            left: 0,
            top: -5,
            width: 120,
            height: 38
          });
          load();
          return minicms_form_load(prefix, form, field);
        };
      });
    }
    div('#field-' + this.form + '-' + this.field + '.control-group.form-component-file', {
      'data-use': (this.use != null ? this.use : '')
    }, function() {
      return div('.form-field-content', function() {
        label('.control-label', {
          "for": "form-input-" + this.form + "-" + this.field
        }, function() {
          return h(this.label);
        });
        return div('.controls', function() {
          div('.state.state-loading', function() {
            return '';
          });
          div('.state.state-uploading', function() {
            return 'uploading...';
          });
          div('.state.state-input-file', function() {
            a('.btn.btn-primary.upload-file', {
              href: '#'
            }, function() {
              return "Choose file";
            });
            input('#form-input-' + this.form + '-' + this.field + '.input-xlarge', {
              type: 'file',
              name: 'file[' + this.field + ']'
            }, function() {});
            return input('#form-input-' + this.form + '-' + this.field + '-hidden.form-value', {
              type: 'hidden',
              value: (this.value != null ? (this.use != null ? this.value[this.use].url : this.value) : ''),
              name: this.field
            }, function() {});
          });
          div('.state.state-image', function() {});
          return div('.state.state-unknown', function() {});
        });
      });
    });
    return text('<script type="text/javascript">minicms_component_file("' + this.config.prefix.url + '", "' + this.form + '", "' + this.field + '");</script>');
  };

}).call(this);
